// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250404125613_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Concrete.BasvuruTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DavaTurId")
                        .HasColumnType("int");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BasvuruTurleri");
                });

            modelBuilder.Entity("Entities.Concrete.DavaTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DavaTurleri", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.Davali", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DavaliAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Davalilar");
                });

            modelBuilder.Entity("Entities.Concrete.Dosya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AcilisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DosyaDurum")
                        .HasColumnType("int");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HaklilikOrani")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("KapanisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KazaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SakatlikOrani")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("basvuruturId")
                        .HasColumnType("int");

                    b.Property<int>("davaturId")
                        .HasColumnType("int");

                    b.Property<int>("ilId")
                        .HasColumnType("int");

                    b.Property<int>("ilceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("basvuruturId");

                    b.HasIndex("davaturId");

                    b.HasIndex("ilId");

                    b.HasIndex("ilceId");

                    b.ToTable("Dosyalar", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.DosyaDavali", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DavaliId")
                        .HasColumnType("int");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DavaliId");

                    b.HasIndex("DosyaId");

                    b.ToTable("DosyaDavalilar");
                });

            modelBuilder.Entity("Entities.Concrete.DosyaEvrak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<int?>("DosyaId1")
                        .HasColumnType("int");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("EvrakId")
                        .HasColumnType("int");

                    b.Property<int?>("EvrakTurId")
                        .HasColumnType("int");

                    b.Property<string>("EvrakUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("DosyaId1");

                    b.HasIndex("EvrakId");

                    b.HasIndex("EvrakTurId");

                    b.ToTable("dosya_evraklar", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.DosyaPay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<string>("DosyaYetki")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<decimal>("Pay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("DosyaPaylar");
                });

            modelBuilder.Entity("Entities.Concrete.EvrakTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("EvrakTurAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EvrakTurler");
                });

            modelBuilder.Entity("Entities.Concrete.HesapHareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("AliciId")
                        .HasColumnType("int");

                    b.Property<int?>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("Durum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GonderenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<byte>("HareketDurumu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HareketTuru")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AliciId");

                    b.HasIndex("DosyaId");

                    b.HasIndex("GonderenId");

                    b.ToTable("HesapHareketler", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.Il", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Iller", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.Ilce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IlId")
                        .HasColumnType("int");

                    b.Property<string>("IlceAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IlId");

                    b.ToTable("ilceler", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IlId")
                        .HasColumnType("int");

                    b.Property<int?>("IlceId")
                        .HasColumnType("int");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IlId");

                    b.HasIndex("IlceId");

                    b.ToTable("kullanicilar", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.Dosya", b =>
                {
                    b.HasOne("Entities.Concrete.BasvuruTur", "BasvuruTur")
                        .WithMany()
                        .HasForeignKey("basvuruturId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.DavaTur", "DavaTur")
                        .WithMany("Dosyalar")
                        .HasForeignKey("davaturId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Il", "Il")
                        .WithMany("Dosyalar")
                        .HasForeignKey("ilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Ilce", "Ilce")
                        .WithMany("Dosyalar")
                        .HasForeignKey("ilceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BasvuruTur");

                    b.Navigation("DavaTur");

                    b.Navigation("Il");

                    b.Navigation("Ilce");
                });

            modelBuilder.Entity("Entities.Concrete.DosyaDavali", b =>
                {
                    b.HasOne("Entities.Concrete.Davali", "Davali")
                        .WithMany("DosyaDavalilar")
                        .HasForeignKey("DavaliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Dosya", "Dosya")
                        .WithMany("DosyaDavalilar")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Davali");

                    b.Navigation("Dosya");
                });

            modelBuilder.Entity("Entities.Concrete.DosyaEvrak", b =>
                {
                    b.HasOne("Entities.Concrete.Dosya", "Dosya")
                        .WithMany()
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Dosya", null)
                        .WithMany("DosyaEvraklar")
                        .HasForeignKey("DosyaId1");

                    b.HasOne("Entities.Concrete.EvrakTur", "Evrak")
                        .WithMany()
                        .HasForeignKey("EvrakId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.EvrakTur", null)
                        .WithMany("DosyaEvraklar")
                        .HasForeignKey("EvrakTurId");

                    b.Navigation("Dosya");

                    b.Navigation("Evrak");
                });

            modelBuilder.Entity("Entities.Concrete.DosyaPay", b =>
                {
                    b.HasOne("Entities.Concrete.Dosya", "Dosya")
                        .WithMany("DosyaPaylar")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Kullanici", "Kullanici")
                        .WithMany("DosyaPaylar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Entities.Concrete.HesapHareket", b =>
                {
                    b.HasOne("Entities.Concrete.Kullanici", "Kullanici2")
                        .WithMany("HesapHareket2")
                        .HasForeignKey("AliciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Dosya", "Dosya")
                        .WithMany()
                        .HasForeignKey("DosyaId");

                    b.HasOne("Entities.Concrete.Kullanici", "Kullanici1")
                        .WithMany("HesapHareket1")
                        .HasForeignKey("GonderenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dosya");

                    b.Navigation("Kullanici1");

                    b.Navigation("Kullanici2");
                });

            modelBuilder.Entity("Entities.Concrete.Ilce", b =>
                {
                    b.HasOne("Entities.Concrete.Il", "Il")
                        .WithMany("Ilceler")
                        .HasForeignKey("IlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Il");
                });

            modelBuilder.Entity("Entities.Concrete.Kullanici", b =>
                {
                    b.HasOne("Entities.Concrete.Il", "Il")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("IlId");

                    b.HasOne("Entities.Concrete.Ilce", "Ilce")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("IlceId");

                    b.Navigation("Il");

                    b.Navigation("Ilce");
                });

            modelBuilder.Entity("Entities.Concrete.DavaTur", b =>
                {
                    b.Navigation("Dosyalar");
                });

            modelBuilder.Entity("Entities.Concrete.Davali", b =>
                {
                    b.Navigation("DosyaDavalilar");
                });

            modelBuilder.Entity("Entities.Concrete.Dosya", b =>
                {
                    b.Navigation("DosyaDavalilar");

                    b.Navigation("DosyaEvraklar");

                    b.Navigation("DosyaPaylar");
                });

            modelBuilder.Entity("Entities.Concrete.EvrakTur", b =>
                {
                    b.Navigation("DosyaEvraklar");
                });

            modelBuilder.Entity("Entities.Concrete.Il", b =>
                {
                    b.Navigation("Dosyalar");

                    b.Navigation("Ilceler");

                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("Entities.Concrete.Ilce", b =>
                {
                    b.Navigation("Dosyalar");

                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("Entities.Concrete.Kullanici", b =>
                {
                    b.Navigation("DosyaPaylar");

                    b.Navigation("HesapHareket1");

                    b.Navigation("HesapHareket2");
                });
#pragma warning restore 612, 618
        }
    }
}
